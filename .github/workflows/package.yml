name: Create Website Release package

on:
  create:
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true

      - name: Install Jekyll
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle update --bundler

      - name: Build site
        run: bundle exec jekyll build

      - name: Create version.json
        run: 'echo "{ \"version\": \"${{ env.RELEASE_VERSION }}\", \"git_ref\": \"$GITHUB_SHA\"}" > ./_site/version.json'

      - name: Rename folder
        run: mv _site public

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Create NL print portal
        run: |
          cd print-portal
          npm install -g @vue/cli-service
          npm install
          npm run build --if-present
        env:
          NODE_ENV: development

      - name: Copy print portal to public
        run: mv print-portal/dist public/nl/print

      - name: Remake for EN print portal
        run: |
          sed -i 's/nl\/print/en\/print/g' print-portal/vue.config.js

      - name: Create EN print portal
        run: |
          cd print-portal
          npm run build --if-present
        env:
          NODE_ENV: development

      - name: Copy print portal to public
        run: mv print-portal/dist public/en/print

      - name: Create tar
        run: tar -czf ct_website_${{ env.RELEASE_VERSION }}.tar.gz ./public

      - name: Upload release tar
        uses: actions/upload-artifact@v1
        with:
          name: ct_website_${{ env.RELEASE_VERSION }}
          path: ct_website_${{ env.RELEASE_VERSION }}.tar.gz
